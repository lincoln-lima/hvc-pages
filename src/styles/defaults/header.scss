@use 'sass:map';
/* -------------------------------------------------------------------- */
@use '../globals' as global;
@use '../defaults/default' as default;
@use '../index/in' as index;
@use '../documentation/doc' as doc;
@use '../playground/play' as play;
/* -------------------------------------------------------------------- */
@mixin responsive-burguer($window-size) {
    @media screen and (min-width: ($window-size + 1)) {
        @include global.undisplayed;
    }
}

@mixin navlinks {
    height: default.$menu-buttons-height;

    padding: 0 0.7em;
    font-size: 1.5em;
    
    border-radius: 0.4em;
}

@mixin navlinksbynum($color, $color-hover) {
    background-color: $color;

    @include navlinks;
    
    &:hover {
        background-color: $color-hover;
    }
}

@mixin responsive-menu($top, $window-size) {
    @media screen and (max-width: $window-size) {
        position: absolute;
        top: $top;
        right: 0;
        z-index: 10;

        align-items: end;
        flex-direction: column;

        padding: 0.5em;
        backdrop-filter: blur(2px);
        background-color: #{global.$white}#{default.$transparency-menu};

        @include global.shadow($type: inset, $blur: 5px, $transparency: 0.3);
        @include global.rounded-border($border-top: 0, $border-bottom: 0.25em);
    }
}
/* -------------------------------------------------------------------- */
header {
    position: sticky;
    top: 0;
    z-index: 9;

    background-color: global.$white;

    @include global.shadow($length1: 1px, $blur: 9px, $transparency: 0.2);

    nav {
        max-width: default.$nav-width;

        @include global.flex;
        @include global.center;

        position: relative;

        a {
            color: global.$white;

            &:hover {
                text-decoration: underline global.$white 2px;
            }

            &.home {
                $max-percentual: 0.85;

                font-size: 1.5em;
                height: default.$home-height;

                @include global.flex($wrap: nowrap, $gap: 0.1em);

                @media screen and (max-width: default.$home-responsive-width) {
                    h1 {
                        @include global.undisplayed;
                    }
                }
    
                &:hover {
                    filter: brightness(0.9);
                }
    
                h1 {
                    font-size: 1.8em;
                    margin-bottom: 0;
                }
            }
        }

        .primary-menu {
            transition: opacity 0.5s;

            @include global.flex($gap: 1em 2em);
            
            li {
                .link-nav-1 {
                    @include navlinksbynum(global.$color1, global.$color1-dark);
                }

                .link-nav-2 {
                    @include navlinksbynum(global.$color2, global.$color2-dark);
                }

                .link-nav-3 {
                    @include navlinksbynum(global.$color3, global.$color3-dark);
                }

                button, a {
                    @include global.flex($gap: 0.5em);
                }
            }
        }

        span {
            color: global.$white;
        }
    }

    &.index {
        padding: index.$header-padding 0;

        .primary-menu {
            @include responsive-menu(calc(index.$header-height - index.$header-padding), index.$header-responsive-width);
        }

        .burger-menu {
            @include responsive-burguer(index.$header-responsive-width);
        }
    }    

    &.doc {
        padding: doc.$header-padding 0;

        .primary-menu {
            @include responsive-menu(calc(doc.$header-height - doc.$header-padding), doc.$header-responsive-width);
        }

        .burger-menu {
            @include responsive-burguer(doc.$header-responsive-width);
        }
    }

    &.play {
        padding: play.$header-padding 0;

        nav {
            max-width: play.$nav-initial-width;

            @media screen and (max-width: map.get(play.$screen-responsive, width2)) {
                max-width: play.$nav-responsive-width;
            }

            .states-view {
                height: default.$home-height;
                max-width: calc(100% - default.$home-height - play.$spacing);

                @include global.flex($wrap: nowrap, $gap: 1em);

                .state {
                    $dot-size: calc(default.$home-height * 0.55);

                    height: 100%;
                    max-width: 31%;

                    padding: 0 1em;

                    border-radius: 1em;
                    filter: brightness(0.6);

                    @include global.middle;

                    @media screen and (max-width: play.$state-labels-responsive-width) {
                        padding: 0 1.5em;
                    }

                    &:hover {
                        cursor: help;
                    }

                    .state-data {
                        @include global.flex($wrap: nowrap, $gap: 0.5em);

                        span {
                            font-size: 1.2em;
                            font-weight: bold;
                            text-transform: uppercase;

                            @include global.setFont(mono);
                        
                            &.dot-state {
                                border-radius: 0.1em;
                                background-color: global.$white;

                                transition: 0.5s;
    
                                @include global.size($dot-size);
                            }

                            &.hvm-state {
                                @media screen and (max-width: play.$state-labels-responsive-width) {
                                    @include global.undisplayed;
                                }
                            }
                        }
                    }
                    
                    &#running-state {
                        background-color: play.$nice-green;

                        .dot-state {
                            @include global.circle;
                        }
                    }

                    &#loading-state {
                        background-color: play.$golden;
                    }

                    &#editing-state {
                        background-color: play.$live-blue;

                        .dot-state {
                            @include global.background($image: 'playground/menu/pen', $size: contain, $repeat: no-repeat, $position: center);
                        }
                    }

                    .tooltip {
                        top: calc(100% + default.$tooltip-size-arr * 2);

                        &::after {
                            @include global.tooltip-top(default.$tooltip-size-arr);
                        }
                    }
                }

                &.editing {
                    #editing-state {
                        filter: brightness(1);
                    }
                }

                &.loading {
                    #loading-state {
                        filter: brightness(1);

                        .dot-state {
                            @include global.load-spin(0.35em, global.$white);
                        }
                    }
                }

                &.running {
                    #running-state {
                        filter: brightness(1);

                        .dot-state {
                            @include global.animation(grow, 1.5s, infinite);
                        }
                    }
                }
            }

            .primary-menu {
                gap: 0.5em 1em;
                @include responsive-menu(calc(play.$header-height - play.$header-padding), play.$header-responsive-width);

                li {
                    @include global.flex($gap: 0.2rem);

                    &:has(.expand) {
                        position: relative;

                        @media screen and (max-width: play.$header-responsive-width) {
                            flex-direction: row-reverse;
                        }
                    }

                    button, a {
                        padding: 0 0.5em;

                        @media screen and (max-width: play.$header-responsive-width) {
                            flex-direction: row-reverse;
                        }

                        &#export, &#share {
                            @media screen and (min-width: (play.$header-responsive-width + 1)) {
                                border-top-right-radius: 0;
                                border-bottom-right-radius: 0;
                            }

                            @media screen and (max-width: play.$header-responsive-width) {
                                border-top-left-radius: 0;
                                border-bottom-left-radius: 0;
                            }
                        }
                        
                        &.expand {
                            transition: none;

                            @include global.background(auto, caret, center, no-repeat);

                            @media screen and (min-width: (play.$header-responsive-width + 1)) {
                                border-top-left-radius: 0;
                                border-bottom-left-radius: 0;
                            }

                            @media screen and (max-width: play.$header-responsive-width) {
                                border-top-right-radius: 0;
                                border-bottom-right-radius: 0;
                            }

                            &.contract {
                                transform: scaleY(-1);
                            }
                        }

                        .icon-tool {
                            @include global.size(1em);
                        }

                        &#debug .icon-tool {
                            @include global.background($image: "playground/menu/debug", $size: cover);
                        }

                        &#run .icon-tool {
                            @include global.background($image: "playground/menu/run", $size: cover);
                        }

                        &#import .icon-tool {
                            @include global.background($image: "playground/menu/import", $size: cover);
                        }

                        &#export .icon-tool {
                            @include global.background($image: "playground/menu/download", $size: cover);
                        }

                        &#share {
                            .icon-tool {
                                @include global.background($image: "playground/menu/share", $size: cover);
                            }

                            &.copied .icon-tool {
                                @include global.background($image: check, $size: cover);
                            }
                        }

                        &#config .icon-tool {
                            @include global.background($image: "playground/menu/config", $size: cover);
                        }

                        .label-tool {
                            @media screen and (min-width: (play.$header-responsive-width + 1)) and (max-width: play.$tools-buttons-responsive-width) {
                                @include global.undisplayed;
                            }
                        }
                    }
                
                    .tooltiper {
                        @include global.middle;
    
                        &.contracted {
                            @include global.undisplayed;
                        }
                    }
                }

                .tooltip {
                    padding: 0.1em 0.4em;

                    width: max-content;
                    top: calc(100% + default.$tooltip-size-arr + play.$header-padding);

                    &::after {
                        @include global.tooltip-top(default.$tooltip-size-arr);
                    }
                }
            }

            .burger-menu {
                @include responsive-burguer(play.$header-responsive-width);
            }
        }
    }
}