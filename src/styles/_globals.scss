@use 'sass:map';
/* -------------------------------------------------------------------- */
@use './defaults/default' as default;
/* -------------------------------------------------------------------- */
$color1: #00a8ac;
$color2: #235a85;
$color3: #5427a0;

$color1-dark: #019699;
$color2-dark: #1e4c6f;
$color3-dark: #42207e;
/* -------------------------------------------------------------------- */
$color1-button: #0d77cc;
$color2-button: #00a8ac;
$color3-button: #0f6ed2;

$color1-hover: #8d49ff;
$color2-hover: #00a8ac;
$color3-hover: #8c4aff;
/* -------------------------------------------------------------------- */
$black: #000000;
$white: #ffffff;
/* -------------------------------------------------------------------- */
$gray: #808080;
$lightgray: #e5e5e5;
/* -------------------------------------------------------------------- */
$color-code: #005CC5;
$color-value: #D73A49;
$color-reserved: #6F42C1;

$color-comment: $gray;
/* -------------------------------------------------------------------- */
$color-mark: #ffb61c;
$color-tooltip: #1f1f1f;
/* -------------------------------------------------------------------- */
$fade-default: linear-gradient(90deg, $color3 5.85%, $color1 73%, $color2 149.38%);

$fade-title: linear-gradient(to right, $color1, $color3);

$fade-button: linear-gradient(90deg, $color1-button 5.85%, $color2-button 73%, $color3-button 149.38%);
$fade-hover: linear-gradient(90deg, $color1-hover 5.85%, $color2-hover 73%, $color3-hover 149.38%);

$fade-subtitle: $fade-hover;
/* -------------------------------------------------------------------- */
$fonts:
    (
    title: 'Archivo Black',
    subtitle: 'Archivo Narrow',
    text: 'Nunito',
    code: 'IBM Plex Mono',
    mono: 'Space',
    segment: 'Segment',
    chalk: 'Eraser',
    cursive: 'Indie Flower',
    dotted: 'Dots',
    default: 'Times New Roman'
    );

@function findFont($req) {
    @each $type, $font in $fonts {
        @if $type == $req {
            @return $font;
        }
    }
    @return map.get($fonts, default);
}

@mixin setFont($type: default) {
    font-family: findFont($type);
}
/* -------------------------------------------------------------------- */
@mixin faded-button($img: null, $font: 1.5em) {
    font-size: $font;
    font-weight: 700;
    text-transform: uppercase;
    
    color: $white;

    @include middle;
    
    &:hover {
        @include shadow($length1: 3px, $blur: 5px, $transparency: 0.4);
    }

    @if $img != null { 
        background: url('/img/#{$img}.svg') center/70% no-repeat, $fade-button center center transparent;
        
        &:hover {
            background-image: url('/img/#{$img}.svg'), $fade-hover;
        }
    }
    @else {
        background-image: $fade-button;

        &:hover {
            background-image: $fade-hover;
        }
    }
    
}

@mixin fixed-button {
    $size: 2.1em;
    $distance: 0.4em;
    $padding: 0.2em;

    z-index: 99;
    position: fixed;

    right: $distance;
    bottom: $distance;

    @include size($size);

    .tooltip {
        top: calc($size/2/2);
        right: calc(100% + default.$tooltip-size-arr + $padding);

        height: 1.4em;

        &::after {
            @include tooltip-right(default.$tooltip-size-arr);
        }

        .tooltip-text {
            width: 7em;
            font-size: 0.6em;
        }
    }
}
/* -------------------------------------------------------------------- */
@mixin size($width, $heigth: $width) {
    width: $width;
    height: $heigth;
}

@mixin shadow($length1: 0, $length2: $length1, $length3: 0, $blur, $transparency, $type: null) {
    box-shadow: $type $length1 $length2 $blur $length3 rgba(0, 0, 0, $transparency);
}

@mixin rounded-border($border-top, $border-bottom) {
	border-top-left-radius: $border-top;
	border-top-right-radius: $border-top;

	border-bottom-left-radius: $border-bottom;
	border-bottom-right-radius: $border-bottom;
}

@mixin background($color: transparent, $image: none, $position: inherit, $repeat: initial, $size: auto) {
    @if $color != auto { background-color: $color; }

    background-image: url('/img/#{$image}.svg');
    background-position: $position;
    background-repeat: $repeat;
    background-size: $size;
}

@mixin flex(
    $justify: space-between,
    $align: center,
    $direction: row,
    $wrap: wrap
    ) {

    display: flex;
    justify-content: $justify;
    align-items: $align;
    flex-direction: $direction;
    flex-wrap: $wrap;
}
/* -------------------------------------------------------------------- */
@mixin middle {
    @include flex($justify: center);
}

@mixin center($important: no) {
    @if $important == yes {
        margin-left: auto !important;
        margin-right: auto !important;
    }
    @else {
        margin-left: auto;
        margin-right: auto;
    }
}

@mixin absolute-middle {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
/* -------------------------------------------------------------------- */
@mixin circle {
    border-radius: 50%;
}

@mixin hidden {
    opacity: 0;
    visibility: hidden;
}

@mixin defaultText {
    font-size: default.$font-size;
    text-align: justify;
}
/* -------------------------------------------------------------------- */
@keyframes twink {
    from {
        opacity: 1;
    }
    50% {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes reveal {
    from {
        opacity: 1;
    }
    90% {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

@keyframes grow {
    from {
        transform: scale(0);
    }
    to {
        transform: scale(1);
    }
}

@keyframes pulse {
    from {
        filter: brightness(1);
    }
    50% {
        filter: brightness(0.5);
    }
    to {
        filter: brightness(1);
    }
}

@keyframes spin {
    from {
        transform: rotate(0);
    }    
    to {
        transform: rotate(360deg);
    }
}

@mixin animation($name, $duration, $times) {
    animation: $name $duration $times;
}
/* -------------------------------------------------------------------- */
@mixin load-spin($border-size, $color) {
    border: $border-size solid transparent;
    border-top-color: $color;
    border-left-color: $color;
    
    background-color: transparent;
    
    @include circle;
    @include animation(spin, 1.5s, infinite);
}
/* -------------------------------------------------------------------- */
@mixin tooltip-top($size-arr) {
    top: -$size-arr;
    left: 50%;
    margin-left: -$size-arr;
}

@mixin tooltip-bottom($size-arr, $distance: 50%) {
    bottom: -$size-arr;
    left: $distance;
    margin-left: -$size-arr;
}

@mixin tooltip-right($size-arr) {
    top: 50%;
    right: -$size-arr;
    margin-top: -$size-arr;
}

@mixin tooltip-left($size-arr) {
    top: 50%;
    left: -$size-arr;
    margin-top: -$size-arr;
}